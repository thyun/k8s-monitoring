apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: monitoring
spec:
  serviceName: prometheus
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-server
  template:
    metadata:
      labels:
        app: prometheus-server
    spec:
      serviceAccountName: monitoring
      containers:
        - name: prometheus
          image: prom/prometheus:v2.4.3
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus/"
            - "--web.external-url=http://prometheus.plab-dev2.skplanet.com"
            - "--web.enable-lifecycle"
            - "--storage.tsdb.no-lockfile"
          ports:
            - name: prometheus
              containerPort: 9090
          volumeMounts:
            - name: prometheus-config-volume
              mountPath: /etc/prometheus/
            - name: rules-volume
              mountPath: /etc/prometheus-rules
            - name: pv-data
              mountPath: /prometheus/
#            - name: prometheus-storage-volume
#              mountPath: /prometheus/
      securityContext:
        fsGroup: 2000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
        - name: prometheus-config-volume
          configMap:
            defaultMode: 420
            name: prometheus-server-conf
#        - name: prometheus-storage-volume
#          emptyDir: {}
#          persistentVolumeClaim:
#            claimName: prometheus-claim
        - name: rules-volume
          configMap:
            name: prometheus-rules
  volumeClaimTemplates:
  - metadata:
      name: pv-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi

